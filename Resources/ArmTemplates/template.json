{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ApimProxyAddress": {
            "type": "string"
        },
        "ApimKey": {
            "type": "string"
        },
        "ApimVisitsKey": {
            "type": "string"
        },
        "AseHostingEnvironmentName": {
            "type": "string",
            "defaultValue": ""
        },
        "AseResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "AspSize": {
            "type": "string",
            "defaultValue": ""
        },
        "AspTier": {
            "type": "string",
            "defaultValue": ""
        },
        "CompositeUiCdnUrl": {
            "type": "string"
        },
        "CompositeUiSharedResourceGroup": {
            "type": "string"
        },
        "CompositeUiSharedStorageAccountName": {
            "type": "string"
        },
        "Environment": {
            "type": "string"
        },
        "SharedAppServicePlanName": {
            "type": "string",
            "defaultValue": ""
        },
        "SharedAppServicePlanResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "customHostName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
            "description": "Custom host name for the website"
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
            "description": "Key vault with the certificate in - only used if customHostName is specified"
            }
        },
        "keyVaultResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
            "description": "Resource group for the key vault - only used if customHostName is specified"
            }
        },
        "certificateName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
            "description": "Name of the secret (certificate) as it appears in key vault - only used if customHostName is specified"
            }
        },
        "EnvironmentName": {
            "type": "string"
        },
        "enableAlerts": {
            "type": "bool",
            "metadata": {
                "description": "Enable or disable alerting"
            }
        },
        "AuthClientSecret": {
            "type": "string"
        },
        "OIDCClientId": {
            "type": "string"
        },
        "OIDCLogPersonalInfo": {
            "type": "bool"
        },
        "OIDCOIDCConfigMetaDataUrl": {
            "type": "string"
        },
        "Neo4jUrl": {
            "type": "string"
        },
        "Neo4jUsername": {
            "type": "string"
        },
        "Neo4jPassword": {
            "type": "securestring"
        },
        "ShowLoginBanner": {
            "type": "bool"
        },
        "Neo4JSettingsSendData": {
            "type": "bool"
        },
        "ExceptionCountThreshold": {
            "type": "string"
        },
        "AppRegistryClientOptionsBaseAddress": {
            "type": "string"
        }
    },
    "variables": {
        "AppServiceAppInsightsName": "[concat(variables('ResourcePrefix'), '-ai')]",
        "AppServicePlanName": "[if(greater(length(parameters('SharedAppServicePlanName')), 0), parameters('SharedAppServicePlanName'), concat(variables('ResourcePrefix'), '-asp'))]",
        "AppServicePlanResourceGroup": "[if(greater(length(parameters('SharedAppServicePlanResourceGroup')), 0), parameters('SharedAppServicePlanResourceGroup'), resourceGroup().name)]",
        "BuildingBlocksDfcBaseUrl": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
        "WebAppName": "[concat(variables('ResourcePrefix'), '-as')]",
        "ResourcePrefix": "[tolower(concat('dfc-', parameters('Environment'), '-compui-shell'))]",
        "IsDraftEnvironment": "[endsWith(toLower(parameters('Environment')), '-draft')]",
        "CompositePathUrl": "[concat(parameters('ApimProxyAddress'), '/composite-ui-paths', if(variables('IsDraftEnvironment'), '-draft', ''), '/')]",
        "CompositeRegionUrl": "[concat(parameters('ApimProxyAddress'), '/composite-ui-regions', if(variables('IsDraftEnvironment'), '-draft', ''), '/')]",
        "ApimVisitsUrl": "[concat(parameters('ApimProxyAddress'), '/visits/AddVisit', '/')]",
        "ActionGroupName": "[concat('dfc-', replace(tolower(parameters('Environment')), '-draft', ''), '-compui-shared-actgrp')]"
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('AppServiceAppInsightsName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('AppServiceAppInsightsName')]"
                    },
                    "attachedService": {
                        "value": ""
                    }
                }
            }
        },
            {
                "apiVersion": "2017-05-10",
                "name": "[variables('AppServicePlanName')]",
                "type": "Microsoft.Resources/deployments",
                "condition": "[not(equals(parameters('SharedAppServicePlanName'), variables('AppServicePlanName')))]",
                "properties": {
                    "mode": "Incremental",
                    "templateLink": {
                        "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'app-service-plan.json')]",
                        "contentVersion": "1.0.0.0"
                    },
                    "parameters": {
                        "appServicePlanName": {
                            "value": "[variables('AppServicePlanName')]"
                        },
                        "aseHostingEnvironmentName": {
                            "value": "[parameters('AseHostingEnvironmentName')]"
                        },
                        "aseResourceGroup": {
                            "value": "[parameters('AseResourceGroup')]"
                        },
                        "aspSize": {
                            "value": "[parameters('AspSize')]"
                        },
                        "aspInstances": {
                            "value": 1
                        },
                        "nonASETier": {
                            "value": "[parameters('AspTier')]"
                        }
                    }
                }
            },
            {
                "name": "compositeshellCertificates",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('CompositeUiSharedResourceGroup')]",
            "condition": "[greater(length(parameters('customHostName')),0)]",
            "properties": {
                "mode": "Incremental",
                 "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'),'certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                },
                    "keyVaultCertificateName": {
                    "value": "[parameters('certificateName')]"
                },
                    "keyVaultResourceGroup": {
                    "value": "[parameters('keyVaultResourceGroup')]"
                },
                    "serverFarmId": {
                    "value": "[resourceId('Microsoft.Web/serverfarms', variables('AppServicePlanName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('WebAppName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'app-service-staging.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('WebAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('AppServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('AppServicePlanResourceGroup')]"
                    },
                    "appServiceType": {
                        "value": "app"
                    },
                    "customHostName": {
                        "value": "[parameters('customHostName')]"
                    },
                    "certificateThumbprint": {
                        "value": "[if(greater(length(parameters('CustomHostName')),0), reference('compositeshellCertificates').outputs.certificateThumbprint.value, '')]",
                        "appServiceAppSettings": {
                            "value": [
                                {
                                    "name": "MSDEPLOY_RENAME_LOCKED_FILES",
                                    "value": "1"
                                },
                                {
                                    "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                    "value": "[reference(variables('AppServiceAppInsightsName')).outputs.InstrumentationKey.value]"
                                },
                                {
                                    "name": "EnvironmentSettings__EnvironmentName",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "ApplicationInsights__ScriptResourceAddress",
                                    "value": "https://az416426.vo.msecnd.net/scripts/"
                                },
                                {
                                    "name": "ApplicationInsights__ConnectSources",
                                    "value": "https://dc.services.visualstudio.com/"
                                },
                                {
                                    "name": "AzureWebJobsStorage",
                                    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('CompositeUiSharedStorageAccountName'),';AccountKey=',listKeys(resourceId(parameters('CompositeUiSharedResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('CompositeUiSharedStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
                                },
                                {
                                    "name": "ApimProxyAddress",
                                    "value": "[parameters('ApimProxyAddress')]"
                                },
                                {
                                    "name": "ApplicationClientOptions__BaseAddress",
                                    "value": null
                                },
                                {
                                    "name": "ApplicationClientOptions__Timeout",
                                    "value": "00:00:10"
                                },
                                {
                                    "name": "BrandingAssetsCdn",
                                    "value": "[parameters('CompositeUiCdnUrl')]"
                                },
                                {
                                    "name": "Logging__LogLevel__Default",
                                    "value": "Error"
                                },
                                {
                                    "name": "Policies__HttpCircuitBreaker__DurationOfBreak",
                                    "value": "00:01:00"
                                },
                                {
                                    "name": "Policies__HttpCircuitBreaker__ExceptionsAllowedBeforeBreaking",
                                    "value": 3
                                },
                                {
                                    "name": "Policies__HttpRetry__BackoffPower",
                                    "value": 3
                                },
                                {
                                    "name": "Policies__HttpRetry__Count",
                                    "value": 3
                                },
                                {
                                    "name": "RobotClientOptions__BaseAddress",
                                    "value": null
                                },
                                {
                                    "name": "RobotClientOptions__Timeout",
                                    "value": "00:00:10"
                                },
                                {
                                    "name": "SitemapClientOptions__BaseAddress",
                                    "value": null
                                },
                                {
                                    "name": "SitemapClientOptions__Timeout",
                                    "value": "00:00:10"
                                },
                                {
                                    "name": "AuthSettings__ClientSecret",
                                    "value": "[parameters('AuthClientSecret')]"
                                },
                                {
                                    "name": "AuthSettings__Issuer",
                                    "value": "[concat('https://', variables('WebAppName'), '.azurewebsites.net')]"
                                },
                                {
                                    "name": "AuthSettings__Audience",
                                    "value": "CompositeChild"
                                },
                                {
                                    "name": "AuthSettings__DefaultRedirectUrl",
                                    "value": "/your-account"
                                },
                                {
                                    "name": "AuthSettings__AuthDssEndpoint",
                                    "value": "/your-account/authsuccess?redirectUrl={Url}"
                                },
                                {
                                    "name": "OIDCSettings__OIDCConfigMetaDataUrl",
                                    "value": "[parameters('OIDCOIDCConfigMetaDataUrl')]"
                                },
                                {
                                    "name": "OIDCSettings__UseOIDCConfigDiscovery",
                                    "value": true
                                },
                                {
                                    "name": "OIDCSettings__AuthorizeUrl",
                                    "value": "tbc"
                                },
                                {
                                    "name": "OIDCSettings__JWKsUrl",
                                    "value": "tbc"
                                },
                                {
                                    "name": "OIDCSettings__JWK",
                                    "value": "tbc"
                                },
                                {
                                    "name": "OIDCSettings__Issuer",
                                    "value": "tbc"
                                },
                                {
                                    "name": "OIDCSettings__ClientId",
                                    "value": "[parameters('OIDCClientId')]"
                                },
                                {
                                    "name": "OIDCSettings__RedirectUrl",
                                    "value": "[concat('https://', variables('WebAppName'), '.azurewebsites.net/auth/auth')]"
                                },
                                {
                                    "name": "OIDCSettings__SignOutRedirectUrl",
                                    "value": "[concat('https://', variables('WebAppName'), '.azurewebsites.net')]"
                                },
                                {
                                    "name": "OIDCSettings__AuthdUrl",
                                    "value": "[concat('https://', variables('WebAppName'), '.azurewebsites.net/your-account')]"
                                },
                                {
                                    "name": "OIDCSettings__LogPersonalInfo",
                                    "value": "[parameters('OIDCLogPersonalInfo')]"
                                },
                                {
                                    "name": "OIDCSettings__Exponent",
                                    "value": "AQAB"
                                },
                                {
                                    "name": "Neo4j__Endpoints__0__Uri",
                                    "value": "[parameters('Neo4jUrl')]"
                                },
                                {
                                    "name": "Neo4j__Endpoints__0__Username",
                                    "value": "[parameters('Neo4jUsername')]"
                                },
                                {
                                    "name": "Neo4j__Endpoints__0__Password",
                                    "value": "[parameters('Neo4jPassword')]"
                                },
                                {
                                    "name": "Neo4j__Endpoints__0__Enabled",
                                    "value": true
                                },
                                {
                                    "name": "Neo4JSettings__SendData",
                                    "value": "[parameters('Neo4JSettingsSendData')]"
                                },
                                {
                                    "name": "VisitClientOptions__Timeout",
                                    "value": "00:00:30"
                                },
                                {
                                    "name": "VisitClientOptions__ApiKey",
                                    "value": "[parameters('ApimVisitsKey')]"
                                },
                                {
                                    "name": "VisitClientOptions__BaseAddress",
                                    "value": "[variables('ApimVisitsUrl')]"
                                },
                                {
                                    "name": "AppRegistryClientOptions__BaseAddress",
                                    "value": "[parameters('AppRegistryClientOptionsBaseAddress')]"
                                },
                                {
                                    "name": "AppRegistryClientOptions__ApiKey",
                                    "value": "[parameters('ApimKey')]"
                                },
                                {
                                    "name": "Configuration__ApplicationName",
                                    "value": "DFC-Composite-Shell"
                                },
                                {
                                    "name": "ShowLoginBanner",
                                    "value": "[parameters('ShowLoginBanner')]"
                                }
                            ]
                        }
                    }
                },
                "dependsOn": [
                    "[variables('AppServiceAppInsightsName')]"
                ]
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('AppServiceAppInsightsName'), '-metric-exceptions')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('AppServiceAppInsightsName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "alertName": {
                        "value": "[concat(variables('AppServiceAppInsightsName'), '-metric-exceptions')]"
                    },
                    "alertSeverity": {
                        "value": 3
                    },
                    "metricName": {
                        "value": "exceptions/count"
                    },
                    "operator": {
                        "value": "GreaterThan"
                    },
                    "threshold": {
                        "value": "[parameters('ExceptionCountThreshold')]"
                    },
                    "aggregation": {
                        "value": "Count"
                    },
                    "windowSize": {
                        "value": "PT5M"
                    },
                    "evaluationFrequency": {
                        "value": "PT1M"
                    },
                    "actionGroupName": {
                        "value": "[variables('ActionGroupName')]"
                    },
                    "actionGroupResourceGroup": {
                        "value": "[parameters('CompositeUiSharedResourceGroup')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Insights/Components', variables('AppServiceAppInsightsName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('AppServiceAppInsightsName'), '-failure-anomaly-v2')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('AppServiceAppInsightsName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/failure-anomaly-rule.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "alertName": {
                        "value": "[concat(variables('AppServiceAppInsightsName'), '-failure-anomaly-v2')]"
                    },
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.Insights/Components', variables('AppServiceAppInsightsName'))]"
                    },
                    "actionGroupId": {
                        "value": "[resourceId(parameters('CompositeUiSharedResourceGroup'), 'microsoft.insights/actionGroups', variables('ActionGroupName'))]"
                    }
                }
            }
        }
    ],
    "outputs": {
    }
}
